"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose_1 = __importDefault(require("mongoose"));
const ts_mongoose_1 = require("ts-mongoose");
const PostModel_1 = __importDefault(require("./PostModel"));
const UserSchema = ts_mongoose_1.createSchema({
    //Add UUID generated by firebase here
    Username: ts_mongoose_1.Type.mixed({ required: true, unique: true }),
    FirstName: ts_mongoose_1.Type.string({ required: true, trim: true }),
    LastName: ts_mongoose_1.Type.string({ required: true, trim: true }),
    UniversityId: ts_mongoose_1.Type.objectId({ ref: "Universities", required: true }),
    Posts: [PostModel_1.default],
    Total_Posts: ts_mongoose_1.Type.number({ default: 0 }),
    Age: ts_mongoose_1.Type.number(),
    Sex: ts_mongoose_1.Type.string(),
    ProfileUrl: ts_mongoose_1.Type.mixed(),
    EmailId: ts_mongoose_1.Type.mixed({ required: true, unique: true }),
    IsAmbassador: ts_mongoose_1.Type.boolean({ default: false }),
    Followers: [ts_mongoose_1.Type.objectId({ ref: "Users" })],
    Following: [ts_mongoose_1.Type.objectId({ ref: "Users" })],
    TotalFollowers: ts_mongoose_1.Type.number({ default: 0 }),
    TotalFollowing: ts_mongoose_1.Type.number({ default: 0 }),
    ClubInterests: [mongoose_1.default.Types.ObjectId],
    TotalClubInterests: ts_mongoose_1.Type.number({ default: 0 }),
});
UserSchema.virtual("fullName")
    .get(function () {
    return this.firstName + this.lastName;
})
    .set(function (fullName) {
    const [firstName, lastName] = fullName.split(" ");
    this.set({ firstName, lastName });
});
UserSchema.virtual("ValidateEmail").get(function () {
    if (/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(this.EmailId)) {
        return 1;
    }
    return 0;
});
UserSchema.methods.UniversityInfo = function (callback) {
    return this.model("Users").populate("UniversityId").find({}, callback);
};
exports.default = mongoose_1.default.model("User", UserSchema);
//# sourceMappingURL=UserModel.js.map